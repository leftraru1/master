using BL.Modelos;
using EL.DTO;
using PL.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.Mvc;

namespace PL.Controllers
{
    [AutorizeSession]
    public class FuncionalidadController : Controller
    {
        private static MFuncionalidad modelo { get; set; }

        public FuncionalidadController()
        {
            modelo = new MFuncionalidad();
        }

        public JsonResult BuscarSeleccionables()
        {

            List<DTOFuncionalidad> funcionalidades = new List<DTOFuncionalidad>();

            try
            {
                funcionalidades = modelo.BuscarSeleccionables();
                Response.StatusCode = (int)HttpStatusCode.OK;
            }
            catch (Exception ex)
            {
                Response.StatusCode = (int)HttpStatusCode.InternalServerError;
                Response.StatusDescription = ex.Message.Replace("\r", "").Replace("\n", "").Replace("\t", "").Replace("\v", "").Replace("\f", "").ToString();
            }

            return new JsonResult { JsonRequestBehavior = JsonRequestBehavior.AllowGet, Data = funcionalidades };
        }

        public JsonResult BuscarPerfil(int id)
        {

            List<DTOFuncionalidad> funcionalidades = new List<DTOFuncionalidad>();

            try
            {
                funcionalidades = modelo.BuscarPerfil(id);
                Response.StatusCode = (int)HttpStatusCode.OK;
            }
            catch (Exception ex)
            {
                Response.StatusCode = (int)HttpStatusCode.InternalServerError;
                Response.StatusDescription = ex.Message.Replace("\r", "").Replace("\n", "").Replace("\t", "").Replace("\v", "").Replace("\f", "").ToString();
            }

            return new JsonResult { JsonRequestBehavior = JsonRequestBehavior.AllowGet, Data = funcionalidades };
        }        

    }
}